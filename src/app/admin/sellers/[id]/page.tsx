// This is an autogenerated file from Firebase Studio.
'use client';

import { notFound, useParams } from 'next/navigation';
import { mockSellers } from '@/lib/placeholder-data';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { ArrowLeft, Check, Phone, ShieldCheck, User, X } from 'lucide-react';
import Link from 'next/link';

const statusVariant = {
  pending: 'secondary',
  approved: 'default',
  rejected: 'destructive',
} as const;

export default function SellerDetailsPage() {
  const params = useParams();
  const sellerId = params.id as string;
  const seller = mockSellers.find((s) => s.id === sellerId);

  if (!seller) {
    notFound();
  }

  return (
    <div>
        <div className="mb-6">
            <Button asChild variant="outline" size="sm" className="mb-4">
                <Link href="/admin/sellers">
                    <ArrowLeft className="mr-2 h-4 w-4"/>
                    Back to Sellers
                </Link>
            </Button>
            <h1 className="text-3xl font-bold font-headline">Seller Details</h1>
        </div>
        <div className="grid gap-8 md:grid-cols-3">
            <div className="md:col-span-1">
                <Card>
                    <CardHeader className="items-center text-center">
                        <Avatar className="h-24 w-24 mb-4">
                            <AvatarImage src={`https://picsum.photos/seed/${seller.id}/200`} />
                            <AvatarFallback>{seller.name.charAt(0)}</AvatarFallback>
                        </Avatar>
                        <CardTitle>{seller.name}</CardTitle>
                        <CardDescription>
                            <Badge variant={statusVariant[seller.status]}>
                                {seller.status.charAt(0).toUpperCase() + seller.status.slice(1)}
                            </Badge>
                        </CardDescription>
                    </CardHeader>
                    <CardContent className="text-sm space-y-4">
                       <div className="flex items-center gap-3">
                            <User className="h-4 w-4 text-muted-foreground" />
                            <span>{seller.name}</span>
                       </div>
                       <div className="flex items-center gap-3">
                            <Phone className="h-4 w-4 text-muted-foreground" />
                            <span>{seller.mobile}</span>
                       </div>
                       <div className="flex items-center gap-3">
                            <ShieldCheck className="h-4 w-4 text-muted-foreground" />
                            <span>{seller.pan}</span>
                       </div>
                    </CardContent>
                </Card>
            </div>
            <div className="md:col-span-2">
                <Card>
                    <CardHeader>
                        <CardTitle>Actions</CardTitle>
                        <CardDescription>Manage this seller's account and status.</CardDescription>
                    </CardHeader>
                    <CardContent className="space-y-4">
                        {seller.status === 'pending' && (
                             <div className="p-4 bg-secondary rounded-lg">
                                <h3 className="font-semibold">Approve Seller</h3>
                                <p className="text-sm text-muted-foreground mb-3">This will allow the seller to start listing products.</p>
                                <div className="flex gap-2">
                                     <Button size="sm" className="text-green-600 border-green-600 hover:bg-green-50 hover:text-green-700" variant="outline">
                                        <Check className="h-4 w-4 mr-1"/> Approve
                                    </Button>
                                    <Button size="sm" className="text-red-600 border-red-600 hover:bg-red-50 hover:text-red-700" variant="outline">
                                        <X className="h-4 w-4 mr-1"/> Reject
                                    </Button>
                                </div>
                            </div>
                        )}
                        <div className="p-4 border rounded-lg">
                            <h3 className="font-semibold">Commission Rate</h3>
                            <p className="text-sm text-muted-foreground mb-3">Current rate is {seller.commissionRate ?? '15'}%.</p>
                            <Button size="sm" variant="outline">Change Rate</Button>
                        </div>
                         <div className="p-4 border border-destructive/50 rounded-lg">
                            <h3 className="font-semibold text-destructive">Suspend Seller</h3>
                            <p className="text-sm text-muted-foreground mb-3">Temporarily disable this seller's account.</p>
                            <Button size="sm" variant="destructive">Suspend</Button>
                        </div>
                    </CardContent>
                </Card>
            </div>
        </div>
    </div>
  );
}
